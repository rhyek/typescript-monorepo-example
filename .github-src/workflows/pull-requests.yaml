name: Tests

on:
  pull_request:
    branches:
      - main

env:
  DOCKER_BUILDKIT: 1

anchors:
  setup-pnpm: &setup-pnpm
    name: Setup pnpm
    uses: pnpm/action-setup@v1.2.1
    with:
      version: 5.17.2
  node-modules-cache: &node-modules-cache
    name: Cache node_modules
    uses: actions/cache@v2
    with:
      path: '**/node_modules'
      key: ${{ runner.os }}-tests-node-modules-${{ github.sha }}

jobs:
  lint-unit:
    name: Lint and Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - <<: *setup-pnpm
      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-tests-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-tests-pnpm-store-
      - <<: *node-modules-cache
      - run: pnpm i --frozen-lockfile
      - name: Fetch target branch
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
      - run: pnpx ts-node -T .scripts/ci/run-lint
      - run: pnpx ts-node -T .scripts/ci/run-tests unit
  # unit-tests:
  #   name: Unit tests
  #   runs-on: ubuntu-20.04
  #   needs: [pre-test]
  #   strategy:
  #     matrix:
  #       path: [src/lib, src/web-api]
  #   defaults:
  #     run:
  #       working-directory: ${{ matrix.path }}
  #   steps:
  #     - *pnpm-setup
  #     - <<: *node-modules-cache
  #     - run: pnpm lint
  #     - run: pnpm test:unit
  # apps-docker-build:
  #   name: 'Apps: docker build'
  #   runs-on: ubuntu-20.04
  #   needs: [unit-tests]
  #   strategy:
  #     matrix:
  #       include:
  #         - app-name: web-api
  #           path: src/web-api
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Docker login
  #       run: echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u rhyek --password-stdin
  #     - name: Set image name
  #       run: echo "IMAGE=ghcr.io/$GITHUB_REPOSITORY-${{ matrix.app-name }}" >> $GITHUB_ENV
  #     - name: Build docker image
  #       run: |
  #         docker build \
  #           -t ${{ env.IMAGE }}:${{ github.sha }} \
  #           --build-arg BUILDKIT_INLINE_CACHE=1 \
  #           --cache-from=${{ env.IMAGE }}:latest \
  #           --cache-from=${{ env.IMAGE }}:${{ github.sha }} \
  #           -f ${{ matrix.path }}/Dockerfile \
  #           .
  #     - name: Docker push
  #       run: docker push ${{ env.IMAGE }}:${{ github.sha }}
  # apps-integration-tests:
  #   name: 'Apps: integration tests'
  #   runs-on: ubuntu-20.04
  #   needs: [apps-docker-build]
  #   strategy:
  #     matrix:
  #       include:
  #         - app-name: web-api
  #           path: src/web-api
  #   defaults:
  #     run:
  #       working-directory: ${{ matrix.path }}
  #   steps:
  #     - *pnpm-setup
  #     - <<: *node-modules-cache
  #     - run: pnpm test:e2e
