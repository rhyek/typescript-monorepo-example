name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  # debug-github-context:
  #   name: lmao
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Inject slug/short variables
  #       uses: rlespinasse/github-slug-action@v3.x
  #     - env:
  #         GITHUB_CONTEXT: ${{ toJSON(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  pr-sha:
    name: PR SHA
    runs-on: ubuntu-20.04
    steps:
      - name: Get PR SHA
        id: pr-sha
        run: |
          SHA=$(curl \
            -s \
            -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            -H 'accept: application/vnd.github.groot-preview+json' \
            GET 'https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/pulls' \
            | jq -rM '.[0].head.sha' 2> /dev/null \
            || echo null
          )
          echo "::set-output name=result::$SHA"
      - name: Is PR
        if: steps.pr-sha.outputs.result != 'null'
        run: echo 'is a pr with sha ${{ steps.pr-sha.outputs.result }}'
      - name: Is not a PR
        if: steps.pr-sha.outputs.result == 'null'
        run: echo 'is not a PR''
# env:
#   HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#   WEB_API_APP: typescript-monorepo

# anchors:
#   setup: &setup
#     - uses: actions/checkout@v2
#     - uses: actions/setup-node@v2
#       with:
#         node-version: '14.15.4'
#     - run: curl -s https://cli-assets.heroku.com/install.sh | sh
#     - run: heroku container:login
#   report: &report
#     name: Slack Notification
#     uses: rtCamp/action-slack-notify@v2
#     if: ${{ cancelled() || failure() }}
#     env:
#       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#       SLACK_USERNAME: github-actions
#       SLACK_COLOR: ${{ job.status == 'success' && 'good' || job.status == 'cancelled' && '#808080' || 'danger' }}

# jobs:
#   publish-apps:
#     name: Publish apps
#     runs-on: ubuntu-20.04
#     strategy:
#       matrix:
#         include:
#           - path: src/web-api
#             heroku_app_key: WEB_API_APP
#     defaults:
#       run:
#         working-directory: ${{ matrix.path }}
#     steps:
#       - *setup
#       - run: heroku container:push --app=${{ env[matrix.heroku_app_key] }} --context-path=../../ web
#       # - run: heroku container:push --app=error --context-path=../../ web
#       - <<: *report

#   deploy-apps:
#     name: Deploy apps
#     runs-on: ubuntu-20.04
#     needs: [publish-apps]
#     steps:
#       - *setup
#       - run: heroku container:release web --app=$WEB_API_APP
#       # - run: heroku container:release web --app=error
#       - <<: *report
#         if: ${{ always() }}
