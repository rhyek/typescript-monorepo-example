name: Tests and Build
'on':
  pull_request:
    branches:
      - main
env:
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  DOCKER_REPOSITORY: rhyek
jobs:
  lint-unit-tests:
    name: Lint and Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpmstore-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpmstore-
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-tests-node-modules-${{ github.sha }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.15.4
      - name: Setup pnpm
        uses: pnpm/action-setup@v1.2.1
        with:
          version: 5.17.2
      - run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH
      - name: Fetch target branch
        run: >-
          git fetch --no-tags --prune --depth=1 origin +refs/heads/${{
          github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
      - run: pnpm i --frozen-lockfile
      - run: .scripts/run-lint.ts
      - run: .scripts/run-tests.ts unit
  build:
    name: Build
    runs-on: ubuntu-20.04
    needs:
      - lint-unit-tests
    strategy:
      matrix:
        include:
          - name: web-api
          - name: internal-api
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-tests-node-modules-${{ github.sha }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.15.4
      - name: Setup pnpm
        uses: pnpm/action-setup@v1.2.1
        with:
          version: 5.17.2
      - run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH
      - name: Fetch target branch
        run: >-
          git fetch --no-tags --prune --depth=1 origin +refs/heads/${{
          github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Docker login
        run: echo ${{ env.DOCKER_TOKEN }} | docker login -u rhyek --password-stdin
      - name: Set image name
        run: >-
          echo "IMAGE=$GITHUB_REPOSITORY_NAME_PART_SLUG-${{
          env.GITHUB_BASE_REF_SLUG }}-${{ matrix.name }}" >> $GITHUB_ENV
      - name: Should build docker image?
        id: needs-build
        run: |
          NEEDS_BUILD=$(.scripts/ci/needs-build.ts ${{ matrix.name }} \
                        --repository ${{ env.DOCKER_REPOSITORY }} \
                        --image ${{ env.IMAGE }})
          echo "::set-output name=result::$NEEDS_BUILD"
      - uses: docker/setup-buildx-action@v1
        if: steps.needs-build.outputs.result == 'true'
      - name: Build docker image
        if: steps.needs-build.outputs.result == 'true'
        run: |
          docker -v
          docker buildx version

          .scripts/build-image.ts \
            --repository ${{ env.DOCKER_REPOSITORY }} \
            --image ${{ env.IMAGE }} \
            --tag ${{ github.event.pull_request.number }} \
            ${{ matrix.name }}
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-20.04
    needs:
      - build
    strategy:
      matrix:
        include:
          - name: web-api
            deps: internal-api
          - name: internal-api
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-tests-node-modules-${{ github.sha }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.15.4
      - name: Setup pnpm
        uses: pnpm/action-setup@v1.2.1
        with:
          version: 5.17.2
      - run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH
      - name: Fetch target branch
        run: >-
          git fetch --no-tags --prune --depth=1 origin +refs/heads/${{
          github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Docker login
        run: echo ${{ env.DOCKER_TOKEN }} | docker login -u rhyek --password-stdin
      - name: Set image name
        run: >-
          echo "IMAGE=$GITHUB_REPOSITORY_NAME_PART_SLUG-${{
          env.GITHUB_BASE_REF_SLUG }}-${{ matrix.name }}" >> $GITHUB_ENV
      - name: Prepare e2e tests if needed
        id: prepare-e2e
        run: |
          PREPARED=$(.scripts/ci/prepare-e2e-if-needed.ts \
            --repository ${{ env.DOCKER_REPOSITORY }} \
            --image ${{ env.IMAGE }} \
            --tag ${{ github.event.pull_request.number }} \
            --deps ${{ matrix.deps }} \
             ${{ matrix.name }})
          echo "::set-output name=prepared::$PREPARED"
      - name: Run integration tests
        if: steps.prepare-e2e.outputs.prepared == 'true'
        run: pnpm test:e2e --filter {${{ matrix.name }}}
