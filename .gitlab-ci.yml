image: docker:20.10.2

services:
  - docker:20.10.2-dind

stages:
  - test
  - publish
  - deploy

variables:
  NODE_VERSION: 14.15.4

before_script:
  - apk update
  - apk add --no-cache curl bash libgcc libstdc++
  - curl -OJs https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64-musl.tar.xz
  - tar -xf node-v$NODE_VERSION-linux-x64-musl.tar.xz -C /opt
  - ln -s /opt/node-v$NODE_VERSION-linux-x64-musl/bin/node /usr/local/bin/node
  - ln -s /opt/node-v$NODE_VERSION-linux-x64-musl/bin/npm /usr/local/bin/npm
  - ln -s /opt/node-v$NODE_VERSION-linux-x64-musl/bin/npx /usr/local/bin/npx
  - export PATH=$PATH:$(npm config get prefix)/bin

test_all:
  stage: test
  only:
    - merge_requests
  script:
    - npm i -g pnpm
    - pnpm i --frozen-lockfile
    - pnpm lint
    - pnpm test
    - apk add --no-cache docker-compose
    - pnpm test:e2e

# https://gitlab.com/gitlab-org/gitlab/-/issues/16376#note_214904350
.setup-heroku: &setup-heroku |-
  curl https://cli-assets.heroku.com/install.sh | sh
  heroku container:login

publish_webapi:
  stage: publish
  only:
    - main
  variables:
    HEROKU_APP: typescript-monorepo
  script:
    - *setup-heroku
    - cd src/webapi
    - heroku container:push --context-path ../../ web

deploy:
  stage: deploy
  only:
    - main
  script:
    - *setup-heroku
    - heroku container:release web --app=typescript-monorepo
