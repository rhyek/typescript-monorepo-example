image: docker:20.10.2

services:
  - docker:20.10.2-dind

stages:
  - pre_test
  - test
  - pre_publish
  - publish
  - deploy

variables:
  NODE_VERSION: 14.15.4

## Common stuff

before_script:
  - apk update
  - apk add --no-cache curl bash libgcc libstdc++
  - export PATH=$PATH:$CI_PROJECT_DIR/.node/bin

.pipeline_setup: &pipeline_setup |-
  curl -OJs https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64-musl.tar.xz
  tar -xf node-v$NODE_VERSION-linux-x64-musl.tar.xz
  mv node-v$NODE_VERSION-linux-x64-musl .node
  ln -s $(pwd)/.node/bin/node /usr/local/bin/node
  ln -s $(pwd)/.node/bin/npm /usr/local/bin/npm
  ln -s $(pwd)/.node/bin/npx /usr/local/bin/npx

## Tests for merge requests

.test_cache: &test_cache
  key: test-$CI_COMMIT_SHA
  paths:
    - .node
    - node_modules/
    - src/webapi/node_modules/
    - src/lib/node_modules/

pre_test:
  stage: pre_test
  only:
    - merge_requests
  cache:
    <<: *test_cache
    policy: push
  script:
    - *pipeline_setup
    - npm i -g pnpm
    - pnpm i --frozen-lockfile

.test_package:
  stage: test
  only:
    - merge_requests
  cache:
    <<: *test_cache
    policy: pull

test_libs:
  extends: .test_package
  script:
    - (cd src/lib && pnpm lint && pnpm test:unit)

.test_app:
  extends: .test_package
  script:
    - apk add --no-cache docker-compose
    - cd $APP_PATH
    - pnpm lint
    - pnpm test:unit
    - pnpm test:e2e

test_webapi:
  extends: .test_app
  variables:
    APP_PATH: src/webapi

## Deployments on merge

.deploy_cache: &deploy_cache
  key: deploy-$CI_COMMIT_SHA
  paths:
    - .node

pre_publish:
  stage: pre_publish
  only:
    - main
  cache:
    <<: *deploy_cache
    policy: push
  script:
    - *pipeline_setup

# https://gitlab.com/gitlab-org/gitlab/-/issues/16376#note_214904350
.setup_heroku: &setup_heroku |-
  curl https://cli-assets.heroku.com/install.sh | sh
  heroku container:login

.publish_app:
  stage: publish
  only:
    - main
  cache:
    <<: *deploy_cache
    policy: pull
  script:
    - *setup_heroku
    - cd $APP_PATH
    - heroku container:push --context-path ../../ web

publish_webapi:
  extends: .publish_app
  variables:
    HEROKU_APP: typescript-monorepo
    APP_PATH: src/webapi

deploy:
  stage: deploy
  only:
    - main
  cache:
    <<: *deploy_cache
    policy: pull
  script:
    - *setup_heroku
    - heroku container:release web --app=typescript-monorepo
